name: "Analyze and build"
on:
  push:
    branches:     "master"
    paths-ignore:
      - '.github/**'
      - 'LICENSE.md'
      - 'README.md'
  workflow_dispatch:
jobs:
  analyze:
    name:            Analyze
    runs-on:         'ubuntu-latest'
    timeout-minutes: ${{ (matrix.language == 'C++' && 120) || 360 }}
    permissions:
      security-events: write
      actions:         read
      contents:        read
    env:
      language: 'c-cpp'
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    - name: Initialize CodeQL
      uses: github/codeql-action/init@v3
      with:
        languages: ${{ matrix.language }}
    - name: Autobuild
      uses: github/codeql-action/autobuild@v3
    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v3
      with:
        category: "/language:${{env.language}}"
  build:
    name:    Build
    needs:   analyze
    runs-on: [ubuntu-latest,macos-latest,windows-latest]
    strategy:
      fail-fast: false
      matrix:
        build_type:   [Debug]
        cpp_compiler: [g++,clang++]
    steps:
    - uses:  actions/checkout@v4
    - name:  Set reusable strings
      id:    strings
      shell: bash
      run:   |
             echo "build-output-dir=${{ github.workspace }}/build" >> "$GITHUB_OUTPUT"
    - name:  Configure CMake
      run:   >
             cmake -B ${{ steps.strings.outputs.build-output-dir }}
             -DCMAKE_CXX_COMPILER=${{ matrix.cpp_compiler }}
             -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}
             -S ${{ github.workspace }}
    - name:  Build
      run:   cmake --build ${{ steps.strings.outputs.build-output-dir }} --config ${{ matrix.build_type }}
    - name: Test
      working-directory: ${{ steps.strings.outputs.build-output-dir }}
      run: ctest --build-config ${{ matrix.build_type }}
